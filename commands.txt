// дублювання юнітів
SET @unit1 = 'зубок'; // цей буде видалений
SET @unit2 = 'зубці'; // замінити на

-- Отримуємо id для двох одиниць вимірювання за назвами
SELECT @unit1_id := id FROM units WHERE title = @unit1 LIMIT 1;
SELECT @unit2_id := id FROM units WHERE title = @unit2 LIMIT 1;

-- Оновлюємо таблицю ingredient_units
UPDATE ingredient_units
SET unit_id = @unit2_id
WHERE unit_id = @unit1_id;

-- Видаляємо перший дублікований запис
DELETE FROM units WHERE id = @unit1_id;


// з одним інгредієнтом або кроком
SELECT *
FROM recipes
WHERE (SELECT COUNT(*)
       FROM recipe_ingredients
       WHERE recipe_ingredients.recipe_id = recipes.id) = 1
   OR (SELECT COUNT(*)
       FROM recipe_steps
       WHERE recipe_steps.recipe_id = recipes.id) = 1;

// чищення кроків
UPDATE recipe_steps
SET description = TRIM(BOTH '\n' FROM description); -- Прибирає переноси рядків на початку і в кінці

UPDATE recipe_steps
SET description = CONCAT(LOWER(SUBSTRING(description, 1, 1)), SUBSTRING(description, 2)); -- Приводить до нижнього регістру першу букву

UPDATE recipe_steps
SET description = REGEXP_REPLACE(description, '\\s+', ' '); -- Замінює більше одного пробілу на один

UPDATE recipe_steps
SET description = TRIM(TRAILING '.' FROM description);

UPDATE recipe_steps
SET description = LTRIM(description);

// дублікати кроків
DELETE rs1
FROM recipe_steps rs1
INNER JOIN recipe_steps rs2
ON rs1.recipe_id = rs2.recipe_id
AND rs1.description = rs2.description
AND rs1.id > rs2.id;
